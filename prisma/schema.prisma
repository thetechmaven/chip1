generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum Gender {
  MALE
  FEMALE
}

enum UserType {
  CREATOR
  BRAND
}

model User {
  // id for relational database
  id                  String    @id @default(auto()) @map("_id") @db.ObjectId

  name                String    @default("")
  chatId              Int       @unique
  email               String?   @default("")
  phone               String?   @default("")
  dob                 String?   @default("")
  username            String?

  userType            UserType?  
  bio                 String?   @default("")
  telegramId          String?   @default("")
  twitterId           String?   @default("")
  tiktokId            String?   @default("")
  twitchId            String?   @default("")
  facebookId          String?   @default("")
  youtubeId           String?   @default("")
  discordId           String?   @default("")
  evmWallet           String?   @default("")
  solWallet           String?   @default("")
  contentStyle        String?   @default("")
  niche               String?   @default("")
  schedule            String?   @default("")
  location            String?   @default("")

  brandName           String?
  brandLocation       String?
  brandIndustry       String?

  isAdmin             Boolean   @default(false)
  isStaff             Boolean   @default(false)
  tags                String[]

  groups              Group[]
  packages            Package[]
}

model Package {
  id                  String    @id @default(auto()) @map("_id") @db.ObjectId
  name                String
  description         String?
  price               Float
  creatorId           String?    @db.ObjectId
  creator             User?      @relation(fields: [creatorId], references: [id])
  tags                String[]
  status              String
  createdAt           DateTime  @default(now())
  negotitationLimit   Int?
}

model Group {
  id                  String    @id @default(auto()) @map("_id") @db.ObjectId
  name                String
  creatorId           String    @db.ObjectId
  groupChatId         Int       @unique
  creator             User      @relation(fields: [creatorId], references: [id])
  chat                Json?
  createdAt           DateTime  @default(now())
}